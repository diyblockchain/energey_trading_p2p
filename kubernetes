********************************************************************************************
Dowload minikube 

wget https://github.com/kubernetes/minikube/releases/download/v1.6.1/minikube-linux-amd64

chmod +x minikube-linux-amd64

sudo mv minikube-linux-amd64 /usr/local/bin

Install Docker
=================

go to get.docker.com

curl -fsSL https://get.docker.com -o get-docker.sh

sudo sh get-docker.sh

========================

Start Minikube

sudo minikube-linux-amd64 start --vm-driver=none

************************************************************************************




sudo kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
sudo kubectl expose deployment hello-minikube --type=NodePort
sudo kubectl get all
sudo kubectl delete deploy svc/hello-minikube
sudo kubectl get all
sudo kubectl delete svc/hello-minikube
sudo kubectl expose deployment hello-minikube --type=NodePort
sudo minikube-linux-amd64 service he

For installing kops 
=================

sudo apt-get install python-pip

92  wget https://github.com/kubernetes/kops/releases/download/1.15.0/kops-linux-amd64
   93  sudo chmod +x kops-linux-amd64 
   94  sudo mv kops-linux-amd64 /usr/local/bin/
   95  clear
   96  sudo apt-get install python-pip
   97  sudo pip install awscli
   98  clear
   99  aws configure
  100  ls -ahl ~/.aws/
  101  history

mkdir ssh
  108  ssh-keygen -f /ssh/id_rsa
  109  clear
  110  ssh-keygen -f /home/vishal/ssh/id_rsa
  111  cat /home/vishal/ssh/id_rsa.pub
  112  sudo mv /usr/local/bin/kops-linux-amd64 /usr/local/bin/kops
  113  clear
  114  history

ssh-keygen -f ~/.ssh/id_rsa
kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1 --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                


=========================
Commands to setup minikube on a EC2 instance
===========================
 clear
    2  wget https://github.com/kubernetes/minikube/releases/download/v1.6.1/minikube-linux-amd64
    3  chmod +x minikube-linux-amd64
    4  sudo mv minikube-linux-amd64 /usr/local/bin/
    5  clear
    6  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    7  chmod +x ./kubectl
    8  sudo mv ./kubectl /usr/local/bin/kubectl
    9  kubectl version
   10  minikube-linux-amd64
   11  sudo minikube start --vm-driver=none
   12  sudo minikube-linux-amd64 start --vm-driver=none
   13  curl -fsSL https://get.docker.com -o get-docker.sh
   14  sudo sh get-docker.sh
   15  sudo minikube-linux-amd64 start --vm-driver=none
   16  kubectl get pods
   17  sudo kubectl get pods
   18  sudo kubectl get service
   19  sudo minikube-linux-amd64 dashboard
   20  sudo kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
   21  sudo kubectl expose deployment hello-minikube --type=NodePort
   22  sudo kubectl get all
   23  sudo kubectl get pods
   24  clear
   25  history
   
   ********************************
   Docker Build
   *******************
   sudo git clone https://github.com/oworldbankru/docker-demo-kube
   47  cd docker-demo-kube/
   48  ls
   49  cat Dockerfile
   50  usermod -G docker ubuntu
   51  sudo usermod -G docker ubuntu
   52  exit
   53  clear
   54  cd docker-demo-kube/
   55  docker build .
   56  docker run -p 3000:3000 i-t kube1435
   57  sudo docker run -p 3000:3000 i-t kube1435
   58  sudo docker run -p 3000:3000 it kube1435
   59  sudo docker run -p 3000:3000 -it kube1435
   60  sudo docker run -p 3000:3000
   61  sudo docker run -p 3000:3000 -it kube1435
   62  docker ps
   63  docker image ls
   64  sudo docker run -p 3000:3000 -it f23270244a58


Docker Push Image to hub

docker login
   75  docker tag f23270244a58 diyblockchain/k8-demo
   76  docker images
   77  docker push diyblockchain/k8-demo
   78  clear
   79  history


PORt Forwarding



sudo kubectl create -f helloworld.yml
  121  sudo kubectl describe pod nodehelloworld.example.com
  122  kubectl get pod
  123  sudo kubectl get pod
  124  clear
  125  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  126  kubectl get pods
  127  sudo kubectl get pods
  128  sudo kubectl delete pod hello-minikube-5688c64fd7-k8rmv
  129  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  130  sudo kubectl port-forward nodehelloworld.example.com 8080:3000
  131  clear
  132  which socat
  133  sudo apt-get update && sudo apt-get install socat
  134  which socat
  135  clear
  136  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  137  clear



 139  kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service
  140  sudo kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service
  141  minikube-linux-amd64 service nodehelloworld-service --url
  142  clear
  143  sudo kubectl get service
  144  cd ...
  145  cd ..
  146  clear
  147  sudo minikube-linux-amd64 service nodehelloworld-service --url
  148  sudo kubectl get service
  149  curl http://172.31.87.215:32418
  150  clear
  151  sudo kubectl get pod
  152  sudo kubectl attach nodehelloworld.example.com
  153  'kubectl describe pod/nodehelloworld.example.com -n default
  154  kubectl describe pod/nodehelloworld.example.com -n default
  155  sudo kubectl describe pod/nodehelloworld.example.com -n default
  156  clear
  157  sudo kubectl exec pod/nodehelloworld.example.com-- ls /app
  158  sudo kubectl exec nodehelloworld.example.com-- ls /app
  159  sudo kubectl get pod
  160  sudo kubectl exec nodehelloworld.example.com -- ls /app
  161  sudo kubectl exec nodehelloworld.example.com -- touch /app/test.txt
  162  sudo kubectl exec nodehelloworld.example.com -- ls /app
  163  clear
  164  sudo kubectl describe nodehelloworld-service
  165  sudo kubectl get service
  166  sudo kubectl describe service nodehelloworld-service
  167  sudo kubectl run -i -tty busybox --image=busybox --restart=N
  168  sudo kubectl run -i -tty busybox --image=busybox --restart=Never --sh
  169  sudo kubectl run -i -tty busybox --image=busybox --restart=n
  170  kubectl run -i --tty busybox --image=busybox -- sh
  171  sudo kubectl run -i --tty busybox --image=busybox -- sh
  172  clear
  173  sudo kubectl getpods
  174  sudo kubectl get pods
  175  history


AWS ELB
====================


199  sudo kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1 --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                
  200  sudo kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                
  201  sudo kops update cluster --name kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --yes
  202  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  203  clear
  204  sudo kubectl create -f first-app/helloworld-service.yml 
  205  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  206  sudo kubectl create -f first-app/helloworld-service.yml 
  207  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  208  sudo kubectl create -f first-app/helloworld-service.yml 
  209  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  210  sudo kubectl create -f first-app/helloworld.yml 
  211  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  212  clear
  213  sudo kubectl create -f first-app/helloworld.yml 
  214  sudo kubectl get pods
  215  sudo kubectl describe pod nodehelloworld.example.com
  216  clear
  217  sudo nano cat first-app/helloworld.yml 
  218  sudo nano first-app/helloworld.yml 
  219  sudo kubectl delete pod nodehelloworld.example.com
  220  sudo kubectl get service
  221  sudo kubectl delete service helloworld-service
  222  clear
  223  sudo kubectl create -f first-app/helloworld.yml 
  224  sudo kubectl create -f first-app/helloworld-service.yml 
  225  sudo kubectl describe pod nodehelloworld.example.com
  226  sudo kubectl describe pod
  227  sudo kubectl describe pod nodehelloworld.example.com
  228  sudo kubectl get service
  229  sudo kubectl describe service helloworld-service
  230  sudo kubectl delete service helloworld-service
  231  sudo kubectl create -f first-app/helloworld-service.yml 
  232  sudo kubectl describe service helloworld-service
  233  sudo kubectl delete service helloworld-service
  234  sudo kubectl create -f first-app/helloworld-service.yml 
  235  sudo kubectl describe service helloworld-service
  236  clear
  237  history
  
  
  Replics
  ========
  
  
  194  cat helloworld-repl-controller.yml
  195  sudo nano helloworld-repl-controller.yml
  196  sudo kubectl create -f kubernetes-course/replication-controller/helloworld-repl-controller.yml
  197  sudo kubectl get pods
  198  sudo nano kubernetes-course/replication-controller/helloworld-repl-controller.yml
  199  sudo kubectl get pods
  200  sudo kubectl delete pods busybox-6cd57fd969-srbrj
  201  sudo kubectl delete pods hello-minikube-5688c64fd7-ts9hn
  202  sudo kubectl delete pods helloworld-controller-whjzm
  203  sudo kubectl delete pods nodehelloworld.example.com
  204  sudo kubectl get pods
  205  sudo kubectl delete pods helloworld-controller-cwqps
  206  sudo kubectl get pods
  207  clear
  208  sudo kubectl scale --replicas=4 -f kubernetes-course/replication-controller/helloworld-repl-controller.yml
  209  sudo kubectl get pods
  210  sudo kubectl get rc
  211  sudo kubectl scale --replicas=1 rc/helloworld-controller
  212  sudo kubectl get pods
  213  sudo kubectl delete sudo kubectl scal
  214  sudo kubectl delete
  215  sudo kubectl delete rc/helloworld-controller
  216  sudo kubectl get pods
  217  history



Deployments
============

 219  cat kubernetes-course/deployment/helloworld
  220  cat kubernetes-course/deployment/helloworld.yml
  221  sudo nano kubernetes-course/deployment/helloworld.yml
  222  sudo kubectl create -f kubernetes-course/deployment/helloworld.yml
  223  sudo nano kubernetes-course/deployment/helloworld.yml
  224  sudo kubectl create -f kubernetes-course/deployment/helloworld.yml
  225  sudo nano kubernetes-course/deployment/helloworld_nginx.yml
  226  sudo kubectl create -f kubernetes-course/deployment/helloworld_nginx.yml
  227  clear
  228  sudo kubectl get deployments
  229  sudo nano kubernetes-course/deployment/helloworld_nginx.yml
  230  history
  231  clere
  232  clear
  233  sudo kubectl get deployments
  234  sudo kubectl get rs
  235  sudo kubectl get pods
  236  sudo kubectl get pods --show-labels
  237  sudo kubectl rollout status kubernetes-course/deployment/helloworld_nginx.yml
  238  sudo kubectl rollout status kubernetes-course/deployment/helloworld
  239  clear
  240  cd kubernetes-course/
  241  cd deployment/p
  242  cd deployment/
  243  ls
  244  ls -la
  245*
  246  sudo kubectl rollout status helloworld.yml
  247  sudo kubectl rollout status helloworld-nginx
  248  sudo kubectl get pods
  249  sudo kubectl rollout status nginx-deployment
  250  sudo get deployments
  251  sudo kubecttl get deployments
  252  sudo kubectl get deployments
  253  sudo kubectl status
  254  clear
  255  sudo nano helloworld.yml
  256  sudo nano helloworld-new.yml
  257  clear
  258  ls
  259  sudo kubectl create -f helloworld-new.yml
  260  sudo kubectl deployments
  261  sudo kubectl get deployments
  262  suo ano helloworld.yml
  263  suo nano helloworld.yml
  264  sudo nano helloworld.yml
  265  docker imagses ls
  266  docker images ls
  267  docker ps
  268  clear
  
  
  healthcheck
  ========
  
  
   340  sudo nano deployment/helloworld-healthcheck.yml
  341  sudo kubectl create -f deployment/helloworld-healthcheck.yml
  342  sudo nano deployment/helloworld-healthcheck.yml
  343  sudo kubectl create -f deployment/helloworld-healthcheck.yml
  344  sudo nano deployment/helloworld-healthcheck.yml
  345  sudo kubectl create -f deployment/helloworld-healthcheck.yml
  346  sudo nano deployment/helloworld-healthcheck.yml
  347  sudo kubectl create -f deployment/helloworld-healthcheck.yml
  348  sudo kubectl get deployment
  349  sudo kubectl delete deployment helloworld-deployment
  350  sudo kubectl create -f deployment/helloworld-healthcheck.yml
  351  sudo kubectl get deployment
  352  sudo kubectl describe deployment helloworld-deployment
  353  cleaer
  354  clear
  355  sudo kubectl get pods
  356  sudo kubectl describe pod liveness-http
  357  celar
  358  clear
  359  history


Service Discovery : DNS
--------------



 409  cat service-discovery/secrets.yml
  410  sudo kubectl create -f service-discovery/secrets.yml
  411  cast service-discovery/database.yml
  412  cat service-discovery/database.yml
  413  sudo kubectl -f service-discovery/database.yml
  414  sudo kubectl create -f service-discovery/database.yml
  415  sudo kubectl create -f service-discovery/database-service.yml
  416  cat service-discovery/helloworld-db.yml
  417  cat service-discovery/database-service.yml
  418  sudo kubectl create -f service-discovery/helloworld-db.yml
  419  sudo sudo kubectl create -f service-discovery/helloworld-db.yml
  420  sudo nano service-discovery/helloworld-db.yml
  421  sudo kubectl create -f service-discovery/helloworld-db.yml
  422  sudo nano service-discovery/helloworld-db.yml
  423  sudo kubectl create -f service-discovery/helloworld-db.yml
  424  sudo nano service-discovery/helloworld-db.yml
  425  sudo kubectl create -f service-discovery/helloworld-db.yml
  426  sudo kubectl create -f service-discovery/helloworld-db-service.yml
  427  clear
  428  cat service-discovery/helloworld-db-service.yml
  429  sudo minikube-linux-amd64 service helloworld-db-service --url
  430  sudo kubectl get pod
  431  sudo kubectl logs helloworld-deployment-5844bbd486-lslfk
  432  curl http://172.31.87.215:30956
  433  clear
  434  sudo kubectl get pod
  435  sudo kubectl exec database -i -t --mysql -u root -p
  436  sudo kubectl exec database -i -t -- mysql -u root -p
  437  cat service-discovery -ls
  438  cd service-discovery/
  439  ls
  440  cat secrets.yml
  441  cd ..
  442  sudo kubectl exec database -i -t -- mysql -u root -p
  443  cat service-discovery/secrets.yml
  444  sudo kubectl exec database -i -t -- mysql -u root -p
  445  cm9vdHBhc3N3b3Jk
  446  sudo kubectl exec database -i -t -- mysql -u root -p
  447  clear
  448  sudo kubectl exec database -i -t -- mysql -u root -p
  449  curl http://172.31.87.215:30956
  450  sudo kubectl exec database -i -t -- mysql -u root -p
  451  clear
  452  sudo kubectl exec database -i -t -- mysql -u root -p cm9vdHBhc3N3b3Jk
  453  sudo kubectl exec database -i -t -- mysql -u root -pcm9vdHBhc3N3b3Jk
  454  curl http://172.31.87.215:30956
  455  clear
  456  sudo kubectl run -i -tty busybox --image=busybox --restart=Never -- sh
  457  sudo kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
  458  clear
  459  sudo kubectl get svc
  460  sudo kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
  461  sudo get pods
  462  sudo kubectl get pods
  463  ssh -i busybox
  464  sudo kubectrl delete pods busybox
  465  sudo kubectl delete pods busybox
  466  clear
  467  sudo kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
  468  sudo kubectl delete pods busybox
  469  clear
  470  sudo kubectl get pods
  471  sudo kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
  472  clear
  473  sudo kubectl delete pods busybox
  474  sudo kubectl get svc
  475  sudo kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
  476  clear
  477  cd service-discovery/
  478  ls
  479  history


