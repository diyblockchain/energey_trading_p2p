********************************************************************************************
Dowload minikube 

wget https://github.com/kubernetes/minikube/releases/download/v1.6.1/minikube-linux-amd64

chmod +x minikube-linux-amd64

sudo mv minikube-linux-amd64 /usr/local/bin

Install Docker
=================

go to get.docker.com

curl -fsSL https://get.docker.com -o get-docker.sh

sudo sh get-docker.sh

========================

Start Minikube

sudo minikube-linux-amd64 start --vm-driver=none

************************************************************************************




sudo kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
sudo kubectl expose deployment hello-minikube --type=NodePort
sudo kubectl get all
sudo kubectl delete deploy svc/hello-minikube
sudo kubectl get all
sudo kubectl delete svc/hello-minikube
sudo kubectl expose deployment hello-minikube --type=NodePort
sudo minikube-linux-amd64 service he

For installing kops 
=================

sudo apt-get install python-pip

92  wget https://github.com/kubernetes/kops/releases/download/1.15.0/kops-linux-amd64
   93  sudo chmod +x kops-linux-amd64 
   94  sudo mv kops-linux-amd64 /usr/local/bin/
   95  clear
   96  sudo apt-get install python-pip
   97  sudo pip install awscli
   98  clear
   99  aws configure
  100  ls -ahl ~/.aws/
  101  history

mkdir ssh
  108  ssh-keygen -f /ssh/id_rsa
  109  clear
  110  ssh-keygen -f /home/vishal/ssh/id_rsa
  111  cat /home/vishal/ssh/id_rsa.pub
  112  sudo mv /usr/local/bin/kops-linux-amd64 /usr/local/bin/kops
  113  clear
  114  history

ssh-keygen -f ~/.ssh/id_rsa
kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1 --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                


=========================
Commands to setup minikube on a EC2 instance
===========================
 clear
    2  wget https://github.com/kubernetes/minikube/releases/download/v1.6.1/minikube-linux-amd64
    3  chmod +x minikube-linux-amd64
    4  sudo mv minikube-linux-amd64 /usr/local/bin/
    5  clear
    6  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    7  chmod +x ./kubectl
    8  sudo mv ./kubectl /usr/local/bin/kubectl
    9  kubectl version
   10  minikube-linux-amd64
   11  sudo minikube start --vm-driver=none
   12  sudo minikube-linux-amd64 start --vm-driver=none
   13  curl -fsSL https://get.docker.com -o get-docker.sh
   14  sudo sh get-docker.sh
   15  sudo minikube-linux-amd64 start --vm-driver=none
   16  kubectl get pods
   17  sudo kubectl get pods
   18  sudo kubectl get service
   19  sudo minikube-linux-amd64 dashboard
   20  sudo kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
   21  sudo kubectl expose deployment hello-minikube --type=NodePort
   22  sudo kubectl get all
   23  sudo kubectl get pods
   24  clear
   25  history
   
   ********************************
   Docker Build
   *******************
   sudo git clone https://github.com/oworldbankru/docker-demo-kube
   47  cd docker-demo-kube/
   48  ls
   49  cat Dockerfile
   50  usermod -G docker ubuntu
   51  sudo usermod -G docker ubuntu
   52  exit
   53  clear
   54  cd docker-demo-kube/
   55  docker build .
   56  docker run -p 3000:3000 i-t kube1435
   57  sudo docker run -p 3000:3000 i-t kube1435
   58  sudo docker run -p 3000:3000 it kube1435
   59  sudo docker run -p 3000:3000 -it kube1435
   60  sudo docker run -p 3000:3000
   61  sudo docker run -p 3000:3000 -it kube1435
   62  docker ps
   63  docker image ls
   64  sudo docker run -p 3000:3000 -it f23270244a58


Docker Push Image to hub

docker login
   75  docker tag f23270244a58 diyblockchain/k8-demo
   76  docker images
   77  docker push diyblockchain/k8-demo
   78  clear
   79  history


PORt Forwarding



sudo kubectl create -f helloworld.yml
  121  sudo kubectl describe pod nodehelloworld.example.com
  122  kubectl get pod
  123  sudo kubectl get pod
  124  clear
  125  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  126  kubectl get pods
  127  sudo kubectl get pods
  128  sudo kubectl delete pod hello-minikube-5688c64fd7-k8rmv
  129  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  130  sudo kubectl port-forward nodehelloworld.example.com 8080:3000
  131  clear
  132  which socat
  133  sudo apt-get update && sudo apt-get install socat
  134  which socat
  135  clear
  136  sudo kubectl port-forward nodehelloworld.example.com 8081:3000
  137  clear



 139  kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service
  140  sudo kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service
  141  minikube-linux-amd64 service nodehelloworld-service --url
  142  clear
  143  sudo kubectl get service
  144  cd ...
  145  cd ..
  146  clear
  147  sudo minikube-linux-amd64 service nodehelloworld-service --url
  148  sudo kubectl get service
  149  curl http://172.31.87.215:32418
  150  clear
  151  sudo kubectl get pod
  152  sudo kubectl attach nodehelloworld.example.com
  153  'kubectl describe pod/nodehelloworld.example.com -n default
  154  kubectl describe pod/nodehelloworld.example.com -n default
  155  sudo kubectl describe pod/nodehelloworld.example.com -n default
  156  clear
  157  sudo kubectl exec pod/nodehelloworld.example.com-- ls /app
  158  sudo kubectl exec nodehelloworld.example.com-- ls /app
  159  sudo kubectl get pod
  160  sudo kubectl exec nodehelloworld.example.com -- ls /app
  161  sudo kubectl exec nodehelloworld.example.com -- touch /app/test.txt
  162  sudo kubectl exec nodehelloworld.example.com -- ls /app
  163  clear
  164  sudo kubectl describe nodehelloworld-service
  165  sudo kubectl get service
  166  sudo kubectl describe service nodehelloworld-service
  167  sudo kubectl run -i -tty busybox --image=busybox --restart=N
  168  sudo kubectl run -i -tty busybox --image=busybox --restart=Never --sh
  169  sudo kubectl run -i -tty busybox --image=busybox --restart=n
  170  kubectl run -i --tty busybox --image=busybox -- sh
  171  sudo kubectl run -i --tty busybox --image=busybox -- sh
  172  clear
  173  sudo kubectl getpods
  174  sudo kubectl get pods
  175  history


AWS ELB
====================


199  sudo kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1 --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                
  200  sudo kops create cluster --name=kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --zones=us-east-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kube.koyn.exchange                                                
  201  sudo kops update cluster --name kube.koyn.exchange --state=s3://kkops-bukcet-abcd14351234 --yes
  202  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  203  clear
  204  sudo kubectl create -f first-app/helloworld-service.yml 
  205  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  206  sudo kubectl create -f first-app/helloworld-service.yml 
  207  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  208  sudo kubectl create -f first-app/helloworld-service.yml 
  209  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  210  sudo kubectl create -f first-app/helloworld.yml 
  211  sudo kops validate cluster --state=s3://kkops-bukcet-abcd14351234
  212  clear
  213  sudo kubectl create -f first-app/helloworld.yml 
  214  sudo kubectl get pods
  215  sudo kubectl describe pod nodehelloworld.example.com
  216  clear
  217  sudo nano cat first-app/helloworld.yml 
  218  sudo nano first-app/helloworld.yml 
  219  sudo kubectl delete pod nodehelloworld.example.com
  220  sudo kubectl get service
  221  sudo kubectl delete service helloworld-service
  222  clear
  223  sudo kubectl create -f first-app/helloworld.yml 
  224  sudo kubectl create -f first-app/helloworld-service.yml 
  225  sudo kubectl describe pod nodehelloworld.example.com
  226  sudo kubectl describe pod
  227  sudo kubectl describe pod nodehelloworld.example.com
  228  sudo kubectl get service
  229  sudo kubectl describe service helloworld-service
  230  sudo kubectl delete service helloworld-service
  231  sudo kubectl create -f first-app/helloworld-service.yml 
  232  sudo kubectl describe service helloworld-service
  233  sudo kubectl delete service helloworld-service
  234  sudo kubectl create -f first-app/helloworld-service.yml 
  235  sudo kubectl describe service helloworld-service
  236  clear
  237  history

